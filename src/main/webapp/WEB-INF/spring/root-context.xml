<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean id="dataSource"
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/webdb" />
		<property name="username" value="dbuser"/>
		<property name="password" value="12345"/>
	</bean>
	
	<!--
		spring에서 mybatis를 인식하게 하는 두 가지 방법
		1. 아래처럼 태그를 작성하여 스캔하는 방식
		<mybatis-spring:scan base-package="com.study.erum.mapper"/>
		2. 환경설정 파일을 작성하여 직접 지정하는 방식
	-->
	<!-- jsp 프로젝트에서 java 방식으로 sqlSessionFactory를 의존주입 한 것과 무엇이 다른지 비교해보자 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value ="classpath:/mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:/mybatis/mapper/*.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans>
